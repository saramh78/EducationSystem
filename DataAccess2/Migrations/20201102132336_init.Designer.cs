// <auto-generated />
using System;
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(EducationSystemContext))]
    [Migration("20201102132336_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Model.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("DataAccess.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Computer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Programming",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Concepts",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Web",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "Bootstrap",
                            ParentId = 6
                        },
                        new
                        {
                            Id = 9,
                            Name = "Css",
                            ParentId = 6
                        },
                        new
                        {
                            Id = 10,
                            Name = "Html",
                            ParentId = 6
                        },
                        new
                        {
                            Id = 7,
                            Name = "Application",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 11,
                            Name = "C",
                            ParentId = 7
                        },
                        new
                        {
                            Id = 13,
                            Name = "C#",
                            ParentId = 11
                        },
                        new
                        {
                            Id = 14,
                            Name = "C++",
                            ParentId = 11
                        },
                        new
                        {
                            Id = 12,
                            Name = "VB",
                            ParentId = 7
                        },
                        new
                        {
                            Id = 3,
                            Name = "DataBase",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 15,
                            Name = "SQL Server",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 16,
                            Name = "Oracle",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Network",
                            ParentId = 1
                        });
                });

            modelBuilder.Entity("DataAccess.Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Name = "How to start"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "essential information"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Steps"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            Name = "Object Orianting"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 6,
                            Name = "Languages"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 7,
                            Name = "Languages"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 11,
                            Name = "C Learning"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 13,
                            Name = "C# Learning"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 14,
                            Name = "C++ Learning"
                        });
                });

            modelBuilder.Entity("DataAccess.Model.CoursePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseParts");
                });

            modelBuilder.Entity("DataAccess.Model.CoursePartArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("CoursePartId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("CoursePartId");

                    b.ToTable("CoursePartArticles");
                });

            modelBuilder.Entity("DataAccess.Model.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("LinkType")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("DataAccess.Model.Category", b =>
                {
                    b.HasOne("DataAccess.Model.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("DataAccess.Model.Course", b =>
                {
                    b.HasOne("DataAccess.Model.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Model.CoursePart", b =>
                {
                    b.HasOne("DataAccess.Model.Course", "Course")
                        .WithMany("CourseParts")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Model.CoursePartArticle", b =>
                {
                    b.HasOne("DataAccess.Model.Article", "Article")
                        .WithMany("CoursePartArticles")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Model.CoursePart", "CoursePart")
                        .WithMany("CoursePartArticles")
                        .HasForeignKey("CoursePartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Model.Link", b =>
                {
                    b.HasOne("DataAccess.Model.Article", "Article")
                        .WithMany("Links")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
